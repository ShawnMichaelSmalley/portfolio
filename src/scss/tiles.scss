// Usage instructions at:
// https://metroui.org.ua/tiles.html

@import "mixins";

$dark: #1d1d1d;

$tileApp: 44px 44px;
$tileSmall: 70px 70px;
$tileMedium: 150px 150px;
$tileWide: 310px 150px;
$tileLarge: 310px 310px;
$tileMargin: 5px;
$tileCellSize: extract($tileMedium, 1);
$tileOutlineColor:  rgba(red($dark), green($dark), blue($dark), .1);
$tileTransformPerspective: 500px;
$tileTransformRotate: 0.138372rad;
$tileSize: extract($tileMedium, 1);

$hoverBackground:  rgba(red($dark), green($dark), blue($dark), .1);

// Media breakpoints
$fs: 0;
$xs: 360px;
$sm: 576px;
$ld: 640px;
$md: 768px;
$lg: 992px;
$xl: 1200px;
$xxl: 1452px;

$mediaBreakpointListMobile: fs, sm, md, lg, xl, xxl;
$mediaBreakpointListMobile2: sm, md, lg, xl, xxl;
$mediaBreakpointListMobile3: xs, sm, ld, md, lg, xl, xxl;
$mediaBreakpointListDesktop: xxl, xl, lg, md, sm, fs;
$mediaBreakpointListDesktop2: xxl, xl, lg, md, sm;
$mediaBreakpointListDesktop3: xxl, xl, lg, md, ld, sm, xs;

$mediaBreakpointListMobileLength: length($mediaBreakpointListMobile);
$mediaBreakpointListMobile2Length: length($mediaBreakpointListMobile2);
$mediaBreakpointListMobile3Length: length($mediaBreakpointListMobile3);
$mediaBreakpointListDesktopLength: length($mediaBreakpointListDesktop);
$mediaBreakpointListDesktop2Length: length($mediaBreakpointListDesktop2);
$mediaBreakpointListDesktop3Length: length($mediaBreakpointListDesktop3);

.tile-small,
.tile-medium,
.tile-wide,
.tile-large,
.tile-app {
    display: block;
    background-color: cyan;
    color: white;
    width: extract($tileMedium, 1);
    height: extract($tileMedium, 2);
    box-shadow: inset 0 0 1px #FFFFCC;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    user-select: none;
}

.tile {
    &-small {
        width: extract($tileSmall, 1);
        height: extract($tileSmall, 2);
    }
    &-medium {
        width: extract($tileMedium, 1);
        height: extract($tileMedium, 2);
    }
    &-wide {
        width: extract($tileWide, 1);
        height: extract($tileWide, 2);
    }
    &-large {
        width: extract($tileLarge, 1);
        height: extract($tileLarge, 2);
    }
    &-app {
        width: extract($tileApp, 1);
        height: extract($tileApp, 2);
    }
}

.tile-small,
.tile-medium,
.tile-wide,
.tile-large,
.tile-app {
    .icon {
        max-width: 33%;
        height: 33%;
        position: absolute;
        top: 50%;
        left: 50%;
        @include translateY(-50%);
        @include translateX(-50%);
        font-size: 50px;
        line-height: 50px;
        z-index: 2;
    }

    .branding-bar {
        height: 32px;
        line-height: 32px;
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
        padding: 0 10px 5px;
        font-size: .875rem;
        font-weight: 500;
        @include text-ellipsis();
        z-index: 2;
    }

    .badge-top, .badge-bottom {
        position: absolute;
        display: block;
        padding: 4px 8px;
        font-size: 12px;
        text-align: center;
        background-color: $hoverBackground;
        z-index: 2;
    }

    .badge-bottom {
        right: 10px;
        bottom: 0;
    }

    .badge-top {
        top: 10px;
        right: 10px;
    }

    &:hover {
        outline: $tileOutlineColor solid 4px;
    }
}

.tile {
    &-small {
        .icon {
            max-width: 50%;
            height: 50%;
            font-size: 35px;
            line-height: 35px;
        }
    }
    &-large {
        .icon {
            font-size: 102px;
            line-height: 102px;
        }
    }
    &-app {
        .icon {
            max-width: 75%;
            height: 75%;
        }
    }
}

.tile-small,
.tile-medium,
.tile-wide,
.tile-large,
.tile-app {
    &.transform-right {
        @include transformOrigin(left 50%);
        @include perspective($tileTransformPerspective !important);
        @include rotateY($tileTransformRotate !important);

        &.tile-small {
            @include perspective($tileTransformPerspective !important);
            @include rotateY($tileTransformRotate * 2 !important);
        }

        &.tile-wide {
            @include perspective($tileTransformPerspective !important);
            @include rotateY($tileTransformRotate / 2 !important);
        }

        &.tile-large {
            @include perspective($tileTransformPerspective !important);
            @include rotateY($tileTransformRotate / 3 !important);
        }
    }

    &.transform-left {
        @include transformOrigin(right 50%);
        @include perspective($tileTransformPerspective !important);
        @include rotateY(-$tileTransformRotate !important);

        &.tile-small {
            @include perspective($tileTransformPerspective !important);
            @include rotateY(-$tileTransformRotate * 2 !important);
        }

        &.tile-wide {
            @include perspective($tileTransformPerspective !important);
            @include rotateY(-$tileTransformRotate / 2 !important);
        }

        &.tile-large {
            @include perspective($tileTransformPerspective !important);
            @include rotateY(-$tileTransformRotate / 3 !important);
        }
    }

    &.transform-top {
        @include transformOrigin(50% bottom);
        @include perspective($tileTransformPerspective !important);
        @include rotateX($tileTransformRotate !important);

        &.tile-small {
            @include perspective($tileTransformPerspective !important);
            @include rotateX($tileTransformRotate * 2 !important);
        }

        &.tile-wide {
            @include perspective($tileTransformPerspective !important);
            @include rotateX($tileTransformRotate / 2 !important);
        }

        &.tile-large {
            @include perspective($tileTransformPerspective !important);
            @include rotateX($tileTransformRotate / 3 !important);
        }
    }

    &.transform-bottom {
        @include transformOrigin(50% top);
        @include perspective($tileTransformPerspective !important);
        @include rotateX(-$tileTransformRotate !important);

        &.tile-small {
            @include perspective($tileTransformPerspective !important);
            @include rotateX(-$tileTransformRotate * 2 !important);
        }

        &.tile-wide {
            @include perspective($tileTransformPerspective !important);
            @include rotateX(-$tileTransformRotate / 2 !important);
        }

        &.tile-large {
            @include perspective($tileTransformPerspective !important);
            @include rotateX(-$tileTransformRotate / 3 !important);
        }
    }
}


.tiles-grid {
    position: relative;
    display: grid;
    grid-template-columns: repeat(auto-fit, 70px);
    grid-template-rows: repeat(auto-fit, 70px);
    grid-gap: 10px;

    .tile-small {
        grid-column: span 1;
        grid-row: span 1;
    }

    .tile-medium {
        grid-column: span 2;
        grid-row: span 2;
    }

    .tile-wide {
        grid-column: span 4;
        grid-row: span 2;
    }

    .tile-large {
        grid-column: span 4;
        grid-row: span 4;
    }
}

.tiles-group {

    width: auto;
    float: left;
    overflow: visible;

    &::before {
        content: attr(data-group-title);
        display: block;
        position: absolute;
        left: 0;
        top: -36px;
        height: 1.5em;
        line-height: 1.5em;
        z-index: 1;
        color: inherit;
    }
}